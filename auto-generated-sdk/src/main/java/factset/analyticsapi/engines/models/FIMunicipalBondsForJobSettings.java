/*
 * Engines API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: v3:[pa,spar,vault,pub,quant,fi,axp,afi,npo,bpm,fpo,others],v1:[fiab]
 * Contact: testapi@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import factset.analyticsapi.engines.JSON;


/**
 * FIMunicipalBondsForJobSettings
 */
@JsonPropertyOrder({
  FIMunicipalBondsForJobSettings.JSON_PROPERTY_ALLOW_SINK_FOR_INSTALLMENT_PAYMENT,
  FIMunicipalBondsForJobSettings.JSON_PROPERTY_IGNORE_SINKING_FUND,
  FIMunicipalBondsForJobSettings.JSON_PROPERTY_USE_ANTICIPATED_SINK_SCHEDULE
})
@javax.annotation.Generated(value = "CustomJavaClientCodegen")
public class FIMunicipalBondsForJobSettings implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ALLOW_SINK_FOR_INSTALLMENT_PAYMENT = "allowSinkForInstallmentPayment";
  private Boolean allowSinkForInstallmentPayment;

  public static final String JSON_PROPERTY_IGNORE_SINKING_FUND = "ignoreSinkingFund";
  private Boolean ignoreSinkingFund;

  public static final String JSON_PROPERTY_USE_ANTICIPATED_SINK_SCHEDULE = "useAnticipatedSinkSchedule";
  private Boolean useAnticipatedSinkSchedule;


  public FIMunicipalBondsForJobSettings allowSinkForInstallmentPayment(Boolean allowSinkForInstallmentPayment) {
    this.allowSinkForInstallmentPayment = allowSinkForInstallmentPayment;
    return this;
  }

   /**
   * Allow Sink For Installment Payment
   * @return allowSinkForInstallmentPayment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allow Sink For Installment Payment")
  @JsonProperty(JSON_PROPERTY_ALLOW_SINK_FOR_INSTALLMENT_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllowSinkForInstallmentPayment() {
    return allowSinkForInstallmentPayment;
  }


  public void setAllowSinkForInstallmentPayment(Boolean allowSinkForInstallmentPayment) {
    this.allowSinkForInstallmentPayment = allowSinkForInstallmentPayment;
  }


  public FIMunicipalBondsForJobSettings ignoreSinkingFund(Boolean ignoreSinkingFund) {
    this.ignoreSinkingFund = ignoreSinkingFund;
    return this;
  }

   /**
   * Ignore Sinking Fund Schedule
   * @return ignoreSinkingFund
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Ignore Sinking Fund Schedule")
  @JsonProperty(JSON_PROPERTY_IGNORE_SINKING_FUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIgnoreSinkingFund() {
    return ignoreSinkingFund;
  }


  public void setIgnoreSinkingFund(Boolean ignoreSinkingFund) {
    this.ignoreSinkingFund = ignoreSinkingFund;
  }


  public FIMunicipalBondsForJobSettings useAnticipatedSinkSchedule(Boolean useAnticipatedSinkSchedule) {
    this.useAnticipatedSinkSchedule = useAnticipatedSinkSchedule;
    return this;
  }

   /**
   * Anticipate Sink Schedule
   * @return useAnticipatedSinkSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Anticipate Sink Schedule")
  @JsonProperty(JSON_PROPERTY_USE_ANTICIPATED_SINK_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseAnticipatedSinkSchedule() {
    return useAnticipatedSinkSchedule;
  }


  public void setUseAnticipatedSinkSchedule(Boolean useAnticipatedSinkSchedule) {
    this.useAnticipatedSinkSchedule = useAnticipatedSinkSchedule;
  }


  /**
   * Return true if this FIMunicipalBondsForJobSettings object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FIMunicipalBondsForJobSettings fiMunicipalBondsForJobSettings = (FIMunicipalBondsForJobSettings) o;
    return Objects.equals(this.allowSinkForInstallmentPayment, fiMunicipalBondsForJobSettings.allowSinkForInstallmentPayment) &&
        Objects.equals(this.ignoreSinkingFund, fiMunicipalBondsForJobSettings.ignoreSinkingFund) &&
        Objects.equals(this.useAnticipatedSinkSchedule, fiMunicipalBondsForJobSettings.useAnticipatedSinkSchedule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowSinkForInstallmentPayment, ignoreSinkingFund, useAnticipatedSinkSchedule);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FIMunicipalBondsForJobSettings {\n");
    sb.append("    allowSinkForInstallmentPayment: ").append(toIndentedString(allowSinkForInstallmentPayment)).append("\n");
    sb.append("    ignoreSinkingFund: ").append(toIndentedString(ignoreSinkingFund)).append("\n");
    sb.append("    useAnticipatedSinkSchedule: ").append(toIndentedString(useAnticipatedSinkSchedule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

