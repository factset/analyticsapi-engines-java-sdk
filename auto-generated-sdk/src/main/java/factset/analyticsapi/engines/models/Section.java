/*
 * Engines API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: v3:[pa,spar,vault,pub,quant,fi,axp,afi,npo,bpm,fpo,others],v1:[fiab]
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import factset.analyticsapi.engines.models.Metadata;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import factset.analyticsapi.engines.JSON;


/**
 * Section
 */
@JsonPropertyOrder({
  Section.JSON_PROPERTY_METADATA,
  Section.JSON_PROPERTY_TITLE,
  Section.JSON_PROPERTY_CONTENT,
  Section.JSON_PROPERTY_SUB_SECTIONS
})
@javax.annotation.Generated(value = "CustomJavaClientCodegen")
public class Section implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private Metadata metadata;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_SUB_SECTIONS = "subSections";
  private java.util.List<Section> subSections = null;


  public Section metadata(Metadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Metadata getMetadata() {
    return metadata;
  }


  public void setMetadata(Metadata metadata) {
    this.metadata = metadata;
  }


  public Section title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Commentary title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Commentary title")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public Section content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Generated commentary content
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Generated commentary content")
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContent() {
    return content;
  }


  public void setContent(String content) {
    this.content = content;
  }


  public Section subSections(java.util.List<Section> subSections) {
    this.subSections = subSections;
    return this;
  }

  public Section addSubSectionsItem(Section subSectionsItem) {
    if (this.subSections == null) {
      this.subSections = new java.util.ArrayList<Section>();
    }
    this.subSections.add(subSectionsItem);
    return this;
  }

   /**
   * Generated commentary subsections
   * @return subSections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Generated commentary subsections")
  @JsonProperty(JSON_PROPERTY_SUB_SECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Section> getSubSections() {
    return subSections;
  }


  public void setSubSections(java.util.List<Section> subSections) {
    this.subSections = subSections;
  }


  /**
   * Return true if this Section object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Section section = (Section) o;
    return Objects.equals(this.metadata, section.metadata) &&
        Objects.equals(this.title, section.title) &&
        Objects.equals(this.content, section.content) &&
        Objects.equals(this.subSections, section.subSections);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metadata, title, content, subSections);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Section {\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    subSections: ").append(toIndentedString(subSections)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

