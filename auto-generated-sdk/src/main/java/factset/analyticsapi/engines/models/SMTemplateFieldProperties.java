/*
 * Engines API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: v3:[pa,vault,pub,quant,fi,axp,afi,npo,bpm,fpo,security-modeling,others],v1:[fiab]
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import factset.analyticsapi.engines.JSON;


/**
 * SMTemplateFieldProperties
 */
@JsonPropertyOrder({
  SMTemplateFieldProperties.JSON_PROPERTY_CATEGORY,
  SMTemplateFieldProperties.JSON_PROPERTY_MANDATORY,
  SMTemplateFieldProperties.JSON_PROPERTY_WHEN_FIELD
})
@javax.annotation.Generated(value = "CustomJavaClientCodegen")
public class SMTemplateFieldProperties implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private java.util.List<String> category = null;

  public static final String JSON_PROPERTY_MANDATORY = "mandatory";
  private Boolean mandatory;

  public static final String JSON_PROPERTY_WHEN_FIELD = "whenField";
  private java.util.List<java.util.Map<String, java.util.List<String>>> whenField = null;


  public SMTemplateFieldProperties category(java.util.List<String> category) {
    this.category = category;
    return this;
  }

  public SMTemplateFieldProperties addCategoryItem(String categoryItem) {
    if (this.category == null) {
      this.category = new java.util.ArrayList<String>();
    }
    this.category.add(categoryItem);
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getCategory() {
    return category;
  }


  public void setCategory(java.util.List<String> category) {
    this.category = category;
  }


  public SMTemplateFieldProperties mandatory(Boolean mandatory) {
    this.mandatory = mandatory;
    return this;
  }

   /**
   * Get mandatory
   * @return mandatory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MANDATORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMandatory() {
    return mandatory;
  }


  public void setMandatory(Boolean mandatory) {
    this.mandatory = mandatory;
  }


  public SMTemplateFieldProperties whenField(java.util.List<java.util.Map<String, java.util.List<String>>> whenField) {
    this.whenField = whenField;
    return this;
  }

  public SMTemplateFieldProperties addWhenFieldItem(java.util.Map<String, java.util.List<String>> whenFieldItem) {
    if (this.whenField == null) {
      this.whenField = new java.util.ArrayList<java.util.Map<String, java.util.List<String>>>();
    }
    this.whenField.add(whenFieldItem);
    return this;
  }

   /**
   * Get whenField
   * @return whenField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WHEN_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<java.util.Map<String, java.util.List<String>>> getWhenField() {
    return whenField;
  }


  public void setWhenField(java.util.List<java.util.Map<String, java.util.List<String>>> whenField) {
    this.whenField = whenField;
  }


  /**
   * Return true if this SMTemplateFieldProperties object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SMTemplateFieldProperties smTemplateFieldProperties = (SMTemplateFieldProperties) o;
    return Objects.equals(this.category, smTemplateFieldProperties.category) &&
        Objects.equals(this.mandatory, smTemplateFieldProperties.mandatory) &&
        Objects.equals(this.whenField, smTemplateFieldProperties.whenField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, mandatory, whenField);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SMTemplateFieldProperties {\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    mandatory: ").append(toIndentedString(mandatory)).append("\n");
    sb.append("    whenField: ").append(toIndentedString(whenField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

