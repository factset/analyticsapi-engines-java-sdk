/*
 * Engines API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: v2:[pa,spar,vault,pub],v1:[fiab,fi,axp,afi,npo,bpm,fpo]
 * Contact: analytics.api.support@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * OptimalHoldings
 */
@JsonPropertyOrder({
  OptimalHoldings.JSON_PROPERTY_IDENTIFIERTYPE,
  OptimalHoldings.JSON_PROPERTY_INCLUDECASH,
  OptimalHoldings.JSON_PROPERTY_EXCLUDEZERO
})

public class OptimalHoldings implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Identifier type
   */
  public enum IdentifiertypeEnum {
    ASSET("Asset"),
    
    CUSIP("Cusip"),
    
    ISIN("Isin"),
    
    RISKMODEL("RiskModel"),
    
    SEDOLCHK("SedolChk"),
    
    SEDOL("Sedol"),
    
    SYMBOLOGYCUSIP("SymbologyCusip"),
    
    TICKER("Ticker"),
    
    TICKERREGION("TickerRegion"),
    
    USER("User");

    private String value;

    IdentifiertypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IdentifiertypeEnum fromValue(String value) {
      for (IdentifiertypeEnum b : IdentifiertypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IDENTIFIERTYPE = "identifiertype";
  private IdentifiertypeEnum identifiertype;

  public static final String JSON_PROPERTY_INCLUDECASH = "includecash";
  private Boolean includecash;

  public static final String JSON_PROPERTY_EXCLUDEZERO = "excludezero";
  private Boolean excludezero;


  public OptimalHoldings identifiertype(IdentifiertypeEnum identifiertype) {
    
    this.identifiertype = identifiertype;
    return this;
  }

   /**
   * Identifier type
   * @return identifiertype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier type")
  @JsonProperty(JSON_PROPERTY_IDENTIFIERTYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IdentifiertypeEnum getIdentifiertype() {
    return identifiertype;
  }


  public void setIdentifiertype(IdentifiertypeEnum identifiertype) {
    this.identifiertype = identifiertype;
  }


  public OptimalHoldings includecash(Boolean includecash) {
    
    this.includecash = includecash;
    return this;
  }

   /**
   * Include cash
   * @return includecash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Include cash")
  @JsonProperty(JSON_PROPERTY_INCLUDECASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIncludecash() {
    return includecash;
  }


  public void setIncludecash(Boolean includecash) {
    this.includecash = includecash;
  }


  public OptimalHoldings excludezero(Boolean excludezero) {
    
    this.excludezero = excludezero;
    return this;
  }

   /**
   * Exclude zero
   * @return excludezero
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Exclude zero")
  @JsonProperty(JSON_PROPERTY_EXCLUDEZERO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExcludezero() {
    return excludezero;
  }


  public void setExcludezero(Boolean excludezero) {
    this.excludezero = excludezero;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptimalHoldings optimalHoldings = (OptimalHoldings) o;
    return Objects.equals(this.identifiertype, optimalHoldings.identifiertype) &&
        Objects.equals(this.includecash, optimalHoldings.includecash) &&
        Objects.equals(this.excludezero, optimalHoldings.excludezero);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifiertype, includecash, excludezero);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptimalHoldings {\n");
    sb.append("    identifiertype: ").append(toIndentedString(identifiertype)).append("\n");
    sb.append("    includecash: ").append(toIndentedString(includecash)).append("\n");
    sb.append("    excludezero: ").append(toIndentedString(excludezero)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

