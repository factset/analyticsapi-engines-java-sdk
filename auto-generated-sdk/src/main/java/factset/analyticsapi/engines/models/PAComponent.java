/*
 * Engines API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: v3:[pa,spar,vault,pub,quant,fi,axp,afi,npo,bpm,fpo,others],v1:[fiab]
 * Contact: analytics.api.support@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import factset.analyticsapi.engines.models.PADateParameters;
import factset.analyticsapi.engines.models.PAIdentifier;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import factset.analyticsapi.engines.JSON;


/**
 * PAComponent
 */
@JsonPropertyOrder({
  PAComponent.JSON_PROPERTY_ID,
  PAComponent.JSON_PROPERTY_ACCOUNTS,
  PAComponent.JSON_PROPERTY_BENCHMARKS,
  PAComponent.JSON_PROPERTY_CURRENCYISOCODE,
  PAComponent.JSON_PROPERTY_DATES,
  PAComponent.JSON_PROPERTY_SNAPSHOT,
  PAComponent.JSON_PROPERTY_NAME,
  PAComponent.JSON_PROPERTY_CATEGORY,
  PAComponent.JSON_PROPERTY_TYPE
})
@javax.annotation.Generated(value = "CustomJavaClientCodegen")
public class PAComponent implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ACCOUNTS = "accounts";
  private java.util.List<PAIdentifier> accounts = null;

  public static final String JSON_PROPERTY_BENCHMARKS = "benchmarks";
  private java.util.List<PAIdentifier> benchmarks = null;

  public static final String JSON_PROPERTY_CURRENCYISOCODE = "currencyisocode";
  private String currencyisocode;

  public static final String JSON_PROPERTY_DATES = "dates";
  private PADateParameters dates;

  public static final String JSON_PROPERTY_SNAPSHOT = "snapshot";
  private Boolean snapshot;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;


  public PAComponent id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Component identifier.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Component identifier.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public PAComponent accounts(java.util.List<PAIdentifier> accounts) {
    this.accounts = accounts;
    return this;
  }

  public PAComponent addAccountsItem(PAIdentifier accountsItem) {
    if (this.accounts == null) {
      this.accounts = new java.util.ArrayList<PAIdentifier>();
    }
    this.accounts.add(accountsItem);
    return this;
  }

   /**
   * List of accounts saved in the PA document.
   * @return accounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of accounts saved in the PA document.")
  @JsonProperty(JSON_PROPERTY_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<PAIdentifier> getAccounts() {
    return accounts;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccounts(java.util.List<PAIdentifier> accounts) {
    this.accounts = accounts;
  }


  public PAComponent benchmarks(java.util.List<PAIdentifier> benchmarks) {
    this.benchmarks = benchmarks;
    return this;
  }

  public PAComponent addBenchmarksItem(PAIdentifier benchmarksItem) {
    if (this.benchmarks == null) {
      this.benchmarks = new java.util.ArrayList<PAIdentifier>();
    }
    this.benchmarks.add(benchmarksItem);
    return this;
  }

   /**
   * List of benchmarks saved in the PA document.
   * @return benchmarks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of benchmarks saved in the PA document.")
  @JsonProperty(JSON_PROPERTY_BENCHMARKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<PAIdentifier> getBenchmarks() {
    return benchmarks;
  }


  @JsonProperty(JSON_PROPERTY_BENCHMARKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBenchmarks(java.util.List<PAIdentifier> benchmarks) {
    this.benchmarks = benchmarks;
  }


  public PAComponent currencyisocode(String currencyisocode) {
    this.currencyisocode = currencyisocode;
    return this;
  }

   /**
   * Get currencyisocode
   * @return currencyisocode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCYISOCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrencyisocode() {
    return currencyisocode;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCYISOCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyisocode(String currencyisocode) {
    this.currencyisocode = currencyisocode;
  }


  public PAComponent dates(PADateParameters dates) {
    this.dates = dates;
    return this;
  }

   /**
   * Get dates
   * @return dates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PADateParameters getDates() {
    return dates;
  }


  @JsonProperty(JSON_PROPERTY_DATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDates(PADateParameters dates) {
    this.dates = dates;
  }


  public PAComponent snapshot(Boolean snapshot) {
    this.snapshot = snapshot;
    return this;
  }

   /**
   * Is the component type snapshot or subperiod.
   * @return snapshot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Is the component type snapshot or subperiod.")
  @JsonProperty(JSON_PROPERTY_SNAPSHOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSnapshot() {
    return snapshot;
  }


  @JsonProperty(JSON_PROPERTY_SNAPSHOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSnapshot(Boolean snapshot) {
    this.snapshot = snapshot;
  }


  public PAComponent name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Component name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Component name.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public PAComponent category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Component category.
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Component category.")
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(String category) {
    this.category = category;
  }


  public PAComponent type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Component type.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Component type.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  /**
   * Return true if this PAComponent object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PAComponent paComponent = (PAComponent) o;
    return Objects.equals(this.id, paComponent.id) &&
        Objects.equals(this.accounts, paComponent.accounts) &&
        Objects.equals(this.benchmarks, paComponent.benchmarks) &&
        Objects.equals(this.currencyisocode, paComponent.currencyisocode) &&
        Objects.equals(this.dates, paComponent.dates) &&
        Objects.equals(this.snapshot, paComponent.snapshot) &&
        Objects.equals(this.name, paComponent.name) &&
        Objects.equals(this.category, paComponent.category) &&
        Objects.equals(this.type, paComponent.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, accounts, benchmarks, currencyisocode, dates, snapshot, name, category, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PAComponent {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("    benchmarks: ").append(toIndentedString(benchmarks)).append("\n");
    sb.append("    currencyisocode: ").append(toIndentedString(currencyisocode)).append("\n");
    sb.append("    dates: ").append(toIndentedString(dates)).append("\n");
    sb.append("    snapshot: ").append(toIndentedString(snapshot)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

