/*
 * Engines API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: v3:[pa,vault,pub,quant,fi,axp,afi,npo,bpm,fpo,security-modeling,others],v1:[fiab]
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import factset.analyticsapi.engines.models.FPOObjective;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import factset.analyticsapi.engines.JSON;


/**
 * FPOOptimizerStrategyOverrides
 */
@JsonPropertyOrder({
  FPOOptimizerStrategyOverrides.JSON_PROPERTY_OBJECTIVE,
  FPOOptimizerStrategyOverrides.JSON_PROPERTY_CONSTRAINTS,
  FPOOptimizerStrategyOverrides.JSON_PROPERTY_ALPHA,
  FPOOptimizerStrategyOverrides.JSON_PROPERTY_TRANSACTION_COST
})
@javax.annotation.Generated(value = "CustomJavaClientCodegen")
public class FPOOptimizerStrategyOverrides implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_OBJECTIVE = "objective";
  private FPOObjective objective;

  /**
   * Gets or Sets inner
   */
  public enum InnerEnum {
    DISABLE("Disable"),
    
    ENABLE("Enable");

    private String value;

    InnerEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InnerEnum fromValue(String value) {
      for (InnerEnum b : InnerEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CONSTRAINTS = "constraints";
  private java.util.Map<String, InnerEnum> constraints = null;

  public static final String JSON_PROPERTY_ALPHA = "alpha";
  private String alpha;

  public static final String JSON_PROPERTY_TRANSACTION_COST = "transactionCost";
  private String transactionCost;


  public FPOOptimizerStrategyOverrides objective(FPOObjective objective) {
    this.objective = objective;
    return this;
  }

   /**
   * Get objective
   * @return objective
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OBJECTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FPOObjective getObjective() {
    return objective;
  }


  public void setObjective(FPOObjective objective) {
    this.objective = objective;
  }


  public FPOOptimizerStrategyOverrides constraints(java.util.Map<String, InnerEnum> constraints) {
    this.constraints = constraints;
    return this;
  }

  public FPOOptimizerStrategyOverrides putConstraintsItem(String key, InnerEnum constraintsItem) {
    if (this.constraints == null) {
      this.constraints = new java.util.HashMap<String, InnerEnum>();
    }
    this.constraints.put(key, constraintsItem);
    return this;
  }

   /**
   * List of constraints
   * @return constraints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of constraints")
  @JsonProperty(JSON_PROPERTY_CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Map<String, InnerEnum> getConstraints() {
    return constraints;
  }


  public void setConstraints(java.util.Map<String, InnerEnum> constraints) {
    this.constraints = constraints;
  }


  public FPOOptimizerStrategyOverrides alpha(String alpha) {
    this.alpha = alpha;
    return this;
  }

   /**
   * Alpha
   * @return alpha
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Alpha")
  @JsonProperty(JSON_PROPERTY_ALPHA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlpha() {
    return alpha;
  }


  public void setAlpha(String alpha) {
    this.alpha = alpha;
  }


  public FPOOptimizerStrategyOverrides transactionCost(String transactionCost) {
    this.transactionCost = transactionCost;
    return this;
  }

   /**
   * Transaction cost
   * @return transactionCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Transaction cost")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionCost() {
    return transactionCost;
  }


  public void setTransactionCost(String transactionCost) {
    this.transactionCost = transactionCost;
  }


  /**
   * Return true if this FPOOptimizerStrategyOverrides object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FPOOptimizerStrategyOverrides fpOOptimizerStrategyOverrides = (FPOOptimizerStrategyOverrides) o;
    return Objects.equals(this.objective, fpOOptimizerStrategyOverrides.objective) &&
        Objects.equals(this.constraints, fpOOptimizerStrategyOverrides.constraints) &&
        Objects.equals(this.alpha, fpOOptimizerStrategyOverrides.alpha) &&
        Objects.equals(this.transactionCost, fpOOptimizerStrategyOverrides.transactionCost);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objective, constraints, alpha, transactionCost);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FPOOptimizerStrategyOverrides {\n");
    sb.append("    objective: ").append(toIndentedString(objective)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("    alpha: ").append(toIndentedString(alpha)).append("\n");
    sb.append("    transactionCost: ").append(toIndentedString(transactionCost)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

