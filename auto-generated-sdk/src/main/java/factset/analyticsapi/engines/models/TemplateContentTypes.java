/*
 * Engines API
 * Allow clients to fetch Analytics through API.
 *
 * The version of the OpenAPI document: v3:[pa,spar,vault,pub,quant,fi,axp,afi,npo,bpm,fpo,others],v1:[fiab]
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import factset.analyticsapi.engines.JSON;


/**
 * TemplateContentTypes
 */
@JsonPropertyOrder({
  TemplateContentTypes.JSON_PROPERTY_MANDATORY,
  TemplateContentTypes.JSON_PROPERTY_OPTIONAL,
  TemplateContentTypes.JSON_PROPERTY_LOCKED
})
@javax.annotation.Generated(value = "CustomJavaClientCodegen")
public class TemplateContentTypes implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_MANDATORY = "mandatory";
  private java.util.List<String> mandatory = null;

  public static final String JSON_PROPERTY_OPTIONAL = "optional";
  private java.util.List<String> optional = null;

  public static final String JSON_PROPERTY_LOCKED = "locked";
  private java.util.List<String> locked = null;


  public TemplateContentTypes mandatory(java.util.List<String> mandatory) {
    this.mandatory = mandatory;
    return this;
  }

  public TemplateContentTypes addMandatoryItem(String mandatoryItem) {
    if (this.mandatory == null) {
      this.mandatory = new java.util.ArrayList<String>();
    }
    this.mandatory.add(mandatoryItem);
    return this;
  }

   /**
   * Template mandatory fields
   * @return mandatory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Template mandatory fields")
  @JsonProperty(JSON_PROPERTY_MANDATORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getMandatory() {
    return mandatory;
  }


  public void setMandatory(java.util.List<String> mandatory) {
    this.mandatory = mandatory;
  }


  public TemplateContentTypes optional(java.util.List<String> optional) {
    this.optional = optional;
    return this;
  }

  public TemplateContentTypes addOptionalItem(String optionalItem) {
    if (this.optional == null) {
      this.optional = new java.util.ArrayList<String>();
    }
    this.optional.add(optionalItem);
    return this;
  }

   /**
   * Template optional fields
   * @return optional
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Template optional fields")
  @JsonProperty(JSON_PROPERTY_OPTIONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getOptional() {
    return optional;
  }


  public void setOptional(java.util.List<String> optional) {
    this.optional = optional;
  }


  public TemplateContentTypes locked(java.util.List<String> locked) {
    this.locked = locked;
    return this;
  }

  public TemplateContentTypes addLockedItem(String lockedItem) {
    if (this.locked == null) {
      this.locked = new java.util.ArrayList<String>();
    }
    this.locked.add(lockedItem);
    return this;
  }

   /**
   * Template locked fields
   * @return locked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Template locked fields")
  @JsonProperty(JSON_PROPERTY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getLocked() {
    return locked;
  }


  public void setLocked(java.util.List<String> locked) {
    this.locked = locked;
  }


  /**
   * Return true if this TemplateContentTypes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TemplateContentTypes templateContentTypes = (TemplateContentTypes) o;
    return Objects.equals(this.mandatory, templateContentTypes.mandatory) &&
        Objects.equals(this.optional, templateContentTypes.optional) &&
        Objects.equals(this.locked, templateContentTypes.locked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mandatory, optional, locked);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateContentTypes {\n");
    sb.append("    mandatory: ").append(toIndentedString(mandatory)).append("\n");
    sb.append("    optional: ").append(toIndentedString(optional)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

