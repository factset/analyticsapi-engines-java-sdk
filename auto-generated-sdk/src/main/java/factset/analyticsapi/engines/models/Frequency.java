/*
 * Engines API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: v3:[pa,spar,vault,pub,quant,fi,axp,afi,npo,bpm,fpo,others],v1:[fiab]
 * Contact: analytics.api.support@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import factset.analyticsapi.engines.JSON;


/**
 * Frequency
 */
@JsonPropertyOrder({
  Frequency.JSON_PROPERTY_NAME,
  Frequency.JSON_PROPERTY_PERIODIC_MULTIPLIERS,
  Frequency.JSON_PROPERTY_NPERIODIC_MULTIPLIERS,
  Frequency.JSON_PROPERTY_IPERIODIC_MULTIPLIERS,
  Frequency.JSON_PROPERTY_INPERIODIC_MULTIPLIERS
})
@javax.annotation.Generated(value = "CustomJavaClientCodegen")
public class Frequency implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PERIODIC_MULTIPLIERS = "periodicMultipliers";
  private java.util.List<Double> periodicMultipliers = null;

  public static final String JSON_PROPERTY_NPERIODIC_MULTIPLIERS = "nperiodicMultipliers";
  private java.util.List<Object> nperiodicMultipliers = null;

  public static final String JSON_PROPERTY_IPERIODIC_MULTIPLIERS = "iperiodicMultipliers";
  private java.util.List<Integer> iperiodicMultipliers = null;

  public static final String JSON_PROPERTY_INPERIODIC_MULTIPLIERS = "inperiodicMultipliers";
  private java.util.List<Object> inperiodicMultipliers = null;


  public Frequency name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Frequency name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Frequency name.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Frequency periodicMultipliers(java.util.List<Double> periodicMultipliers) {
    this.periodicMultipliers = periodicMultipliers;
    return this;
  }

  public Frequency addPeriodicMultipliersItem(Double periodicMultipliersItem) {
    if (this.periodicMultipliers == null) {
      this.periodicMultipliers = new java.util.ArrayList<Double>();
    }
    this.periodicMultipliers.add(periodicMultipliersItem);
    return this;
  }

   /**
   * Get periodicMultipliers
   * @return periodicMultipliers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERIODIC_MULTIPLIERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Double> getPeriodicMultipliers() {
    return periodicMultipliers;
  }


  public void setPeriodicMultipliers(java.util.List<Double> periodicMultipliers) {
    this.periodicMultipliers = periodicMultipliers;
  }


  public Frequency nperiodicMultipliers(java.util.List<Object> nperiodicMultipliers) {
    this.nperiodicMultipliers = nperiodicMultipliers;
    return this;
  }

  public Frequency addNperiodicMultipliersItem(Object nperiodicMultipliersItem) {
    if (this.nperiodicMultipliers == null) {
      this.nperiodicMultipliers = new java.util.ArrayList<Object>();
    }
    this.nperiodicMultipliers.add(nperiodicMultipliersItem);
    return this;
  }

   /**
   * Get nperiodicMultipliers
   * @return nperiodicMultipliers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NPERIODIC_MULTIPLIERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Object> getNperiodicMultipliers() {
    return nperiodicMultipliers;
  }


  public void setNperiodicMultipliers(java.util.List<Object> nperiodicMultipliers) {
    this.nperiodicMultipliers = nperiodicMultipliers;
  }


  public Frequency iperiodicMultipliers(java.util.List<Integer> iperiodicMultipliers) {
    this.iperiodicMultipliers = iperiodicMultipliers;
    return this;
  }

  public Frequency addIperiodicMultipliersItem(Integer iperiodicMultipliersItem) {
    if (this.iperiodicMultipliers == null) {
      this.iperiodicMultipliers = new java.util.ArrayList<Integer>();
    }
    this.iperiodicMultipliers.add(iperiodicMultipliersItem);
    return this;
  }

   /**
   * Get iperiodicMultipliers
   * @return iperiodicMultipliers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IPERIODIC_MULTIPLIERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Integer> getIperiodicMultipliers() {
    return iperiodicMultipliers;
  }


  public void setIperiodicMultipliers(java.util.List<Integer> iperiodicMultipliers) {
    this.iperiodicMultipliers = iperiodicMultipliers;
  }


  public Frequency inperiodicMultipliers(java.util.List<Object> inperiodicMultipliers) {
    this.inperiodicMultipliers = inperiodicMultipliers;
    return this;
  }

  public Frequency addInperiodicMultipliersItem(Object inperiodicMultipliersItem) {
    if (this.inperiodicMultipliers == null) {
      this.inperiodicMultipliers = new java.util.ArrayList<Object>();
    }
    this.inperiodicMultipliers.add(inperiodicMultipliersItem);
    return this;
  }

   /**
   * Get inperiodicMultipliers
   * @return inperiodicMultipliers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INPERIODIC_MULTIPLIERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Object> getInperiodicMultipliers() {
    return inperiodicMultipliers;
  }


  public void setInperiodicMultipliers(java.util.List<Object> inperiodicMultipliers) {
    this.inperiodicMultipliers = inperiodicMultipliers;
  }


  /**
   * Return true if this Frequency object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Frequency frequency = (Frequency) o;
    return Objects.equals(this.name, frequency.name) &&
        Objects.equals(this.periodicMultipliers, frequency.periodicMultipliers) &&
        Objects.equals(this.nperiodicMultipliers, frequency.nperiodicMultipliers) &&
        Objects.equals(this.iperiodicMultipliers, frequency.iperiodicMultipliers) &&
        Objects.equals(this.inperiodicMultipliers, frequency.inperiodicMultipliers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, periodicMultipliers, nperiodicMultipliers, iperiodicMultipliers, inperiodicMultipliers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Frequency {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    periodicMultipliers: ").append(toIndentedString(periodicMultipliers)).append("\n");
    sb.append("    nperiodicMultipliers: ").append(toIndentedString(nperiodicMultipliers)).append("\n");
    sb.append("    iperiodicMultipliers: ").append(toIndentedString(iperiodicMultipliers)).append("\n");
    sb.append("    inperiodicMultipliers: ").append(toIndentedString(inperiodicMultipliers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

