/*
 * Engines API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: v3:[pa,spar,vault,pub,quant,fi,axp,afi,npo,bpm,fpo,others],v1:[fiab]
 * Contact: analytics.api.support@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import factset.analyticsapi.engines.models.Error;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import factset.analyticsapi.engines.JSON;


/**
 * CalculationUnitStatus
 */
@JsonPropertyOrder({
  CalculationUnitStatus.JSON_PROPERTY_STATUS,
  CalculationUnitStatus.JSON_PROPERTY_ERRORS,
  CalculationUnitStatus.JSON_PROPERTY_RESULT,
  CalculationUnitStatus.JSON_PROPERTY_PROGRESS,
  CalculationUnitStatus.JSON_PROPERTY_POINTS,
  CalculationUnitStatus.JSON_PROPERTY_DHIST_RCV_ASSUMP_RATES,
  CalculationUnitStatus.JSON_PROPERTY_IHIST_RCV_ASSUMP_RATES
})
@javax.annotation.Generated(value = "CustomJavaClientCodegen")
public class CalculationUnitStatus implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * The status of calculation unit.
   */
  public enum StatusEnum {
    QUEUED("Queued"),
    
    EXECUTING("Executing"),
    
    SUCCESS("Success"),
    
    FAILED("Failed"),
    
    CANCELLED("Cancelled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private java.util.List<Error> errors = null;

  public static final String JSON_PROPERTY_RESULT = "result";
  private String result;

  public static final String JSON_PROPERTY_PROGRESS = "progress";
  private String progress;

  public static final String JSON_PROPERTY_POINTS = "points";
  private Integer points;

  public static final String JSON_PROPERTY_DHIST_RCV_ASSUMP_RATES = "dhistRcvAssumpRates";
  private java.util.List<Double> dhistRcvAssumpRates = null;

  public static final String JSON_PROPERTY_IHIST_RCV_ASSUMP_RATES = "ihistRcvAssumpRates";
  private java.util.List<BigDecimal> ihistRcvAssumpRates = null;


  public CalculationUnitStatus status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of calculation unit.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of calculation unit.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public CalculationUnitStatus errors(java.util.List<Error> errors) {
    this.errors = errors;
    return this;
  }

  public CalculationUnitStatus addErrorsItem(Error errorsItem) {
    if (this.errors == null) {
      this.errors = new java.util.ArrayList<Error>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * The error in a calculation unit.
   * @return errors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The error in a calculation unit.")
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Error> getErrors() {
    return errors;
  }


  public void setErrors(java.util.List<Error> errors) {
    this.errors = errors;
  }


  public CalculationUnitStatus result(String result) {
    this.result = result;
    return this;
  }

   /**
   * The result URL of the calculation.
   * @return result
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The result URL of the calculation.")
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResult() {
    return result;
  }


  public void setResult(String result) {
    this.result = result;
  }


  public CalculationUnitStatus progress(String progress) {
    this.progress = progress;
    return this;
  }

   /**
   * The progress of the calculation unit.
   * @return progress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The progress of the calculation unit.")
  @JsonProperty(JSON_PROPERTY_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProgress() {
    return progress;
  }


  public void setProgress(String progress) {
    this.progress = progress;
  }


  public CalculationUnitStatus points(Integer points) {
    this.points = points;
    return this;
  }

   /**
   * The points for the calculation unit.
   * @return points
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The points for the calculation unit.")
  @JsonProperty(JSON_PROPERTY_POINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPoints() {
    return points;
  }


  public void setPoints(Integer points) {
    this.points = points;
  }


  public CalculationUnitStatus dhistRcvAssumpRates(java.util.List<Double> dhistRcvAssumpRates) {
    this.dhistRcvAssumpRates = dhistRcvAssumpRates;
    return this;
  }

  public CalculationUnitStatus addDhistRcvAssumpRatesItem(Double dhistRcvAssumpRatesItem) {
    if (this.dhistRcvAssumpRates == null) {
      this.dhistRcvAssumpRates = new java.util.ArrayList<Double>();
    }
    this.dhistRcvAssumpRates.add(dhistRcvAssumpRatesItem);
    return this;
  }

   /**
   * Get dhistRcvAssumpRates
   * @return dhistRcvAssumpRates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DHIST_RCV_ASSUMP_RATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Double> getDhistRcvAssumpRates() {
    return dhistRcvAssumpRates;
  }


  public void setDhistRcvAssumpRates(java.util.List<Double> dhistRcvAssumpRates) {
    this.dhistRcvAssumpRates = dhistRcvAssumpRates;
  }


  public CalculationUnitStatus ihistRcvAssumpRates(java.util.List<BigDecimal> ihistRcvAssumpRates) {
    this.ihistRcvAssumpRates = ihistRcvAssumpRates;
    return this;
  }

  public CalculationUnitStatus addIhistRcvAssumpRatesItem(BigDecimal ihistRcvAssumpRatesItem) {
    if (this.ihistRcvAssumpRates == null) {
      this.ihistRcvAssumpRates = new java.util.ArrayList<BigDecimal>();
    }
    this.ihistRcvAssumpRates.add(ihistRcvAssumpRatesItem);
    return this;
  }

   /**
   * Get ihistRcvAssumpRates
   * @return ihistRcvAssumpRates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IHIST_RCV_ASSUMP_RATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<BigDecimal> getIhistRcvAssumpRates() {
    return ihistRcvAssumpRates;
  }


  public void setIhistRcvAssumpRates(java.util.List<BigDecimal> ihistRcvAssumpRates) {
    this.ihistRcvAssumpRates = ihistRcvAssumpRates;
  }


  /**
   * Return true if this CalculationUnitStatus object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculationUnitStatus calculationUnitStatus = (CalculationUnitStatus) o;
    return Objects.equals(this.status, calculationUnitStatus.status) &&
        Objects.equals(this.errors, calculationUnitStatus.errors) &&
        Objects.equals(this.result, calculationUnitStatus.result) &&
        Objects.equals(this.progress, calculationUnitStatus.progress) &&
        Objects.equals(this.points, calculationUnitStatus.points) &&
        Objects.equals(this.dhistRcvAssumpRates, calculationUnitStatus.dhistRcvAssumpRates) &&
        Objects.equals(this.ihistRcvAssumpRates, calculationUnitStatus.ihistRcvAssumpRates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, errors, result, progress, points, dhistRcvAssumpRates, ihistRcvAssumpRates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculationUnitStatus {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    dhistRcvAssumpRates: ").append(toIndentedString(dhistRcvAssumpRates)).append("\n");
    sb.append("    ihistRcvAssumpRates: ").append(toIndentedString(ihistRcvAssumpRates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

