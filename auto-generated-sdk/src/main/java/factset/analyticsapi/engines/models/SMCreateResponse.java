/*
 * Engines API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: v3:[pa,vault,pub,quant,fi,axp,afi,npo,bpm,fpo,security-modeling,others],v1:[fiab]
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import factset.analyticsapi.engines.models.SMError;
import factset.analyticsapi.engines.models.SMWarning;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import factset.analyticsapi.engines.JSON;


/**
 * SMCreateResponse
 */
@JsonPropertyOrder({
  SMCreateResponse.JSON_PROPERTY_SECURITY_NAME,
  SMCreateResponse.JSON_PROPERTY_STATUS,
  SMCreateResponse.JSON_PROPERTY_WARNINGS,
  SMCreateResponse.JSON_PROPERTY_ERRORS
})
@javax.annotation.Generated(value = "CustomJavaClientCodegen")
public class SMCreateResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SECURITY_NAME = "securityName";
  private String securityName;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    SUCCESS("success"),
    
    FAILURE("failure");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_WARNINGS = "warnings";
  private java.util.List<SMWarning> warnings = null;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private java.util.List<SMError> errors = null;


  public SMCreateResponse securityName(String securityName) {
    this.securityName = securityName;
    return this;
  }

   /**
   * Get securityName
   * @return securityName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SECURITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityName() {
    return securityName;
  }


  public void setSecurityName(String securityName) {
    this.securityName = securityName;
  }


  public SMCreateResponse status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public SMCreateResponse warnings(java.util.List<SMWarning> warnings) {
    this.warnings = warnings;
    return this;
  }

  public SMCreateResponse addWarningsItem(SMWarning warningsItem) {
    if (this.warnings == null) {
      this.warnings = new java.util.ArrayList<SMWarning>();
    }
    this.warnings.add(warningsItem);
    return this;
  }

   /**
   * Get warnings
   * @return warnings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<SMWarning> getWarnings() {
    return warnings;
  }


  public void setWarnings(java.util.List<SMWarning> warnings) {
    this.warnings = warnings;
  }


  public SMCreateResponse errors(java.util.List<SMError> errors) {
    this.errors = errors;
    return this;
  }

  public SMCreateResponse addErrorsItem(SMError errorsItem) {
    if (this.errors == null) {
      this.errors = new java.util.ArrayList<SMError>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<SMError> getErrors() {
    return errors;
  }


  public void setErrors(java.util.List<SMError> errors) {
    this.errors = errors;
  }


  /**
   * Return true if this SMCreateResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SMCreateResponse smCreateResponse = (SMCreateResponse) o;
    return Objects.equals(this.securityName, smCreateResponse.securityName) &&
        Objects.equals(this.status, smCreateResponse.status) &&
        Objects.equals(this.warnings, smCreateResponse.warnings) &&
        Objects.equals(this.errors, smCreateResponse.errors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(securityName, status, warnings, errors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SMCreateResponse {\n");
    sb.append("    securityName: ").append(toIndentedString(securityName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

