/*
 * Engines API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: v3:[pa,spar,vault,pub,quant,fi,axp,afi,npo,bpm,fpo,others],v1:[fiab]
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import factset.analyticsapi.engines.JSON;


/**
 * FIConvertibleSettings
 */
@JsonPropertyOrder({
  FIConvertibleSettings.JSON_PROPERTY_EQUITY_PRICE,
  FIConvertibleSettings.JSON_PROPERTY_EQUITY_INDEX_VOLATILITY,
  FIConvertibleSettings.JSON_PROPERTY_EQUITY_DIVIDEND_YIELD,
  FIConvertibleSettings.JSON_PROPERTY_VOLATILITY_CAP_METHOD,
  FIConvertibleSettings.JSON_PROPERTY_VOLATILITY_CAP_METHOD_VALUE,
  FIConvertibleSettings.JSON_PROPERTY_EQUITY_EXCHANGE_RATE
})
@javax.annotation.Generated(value = "CustomJavaClientCodegen")
public class FIConvertibleSettings implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_EQUITY_PRICE = "equityPrice";
  private Double equityPrice;

  public static final String JSON_PROPERTY_EQUITY_INDEX_VOLATILITY = "equityIndexVolatility";
  private Double equityIndexVolatility;

  public static final String JSON_PROPERTY_EQUITY_DIVIDEND_YIELD = "equityDividendYield";
  private Double equityDividendYield;

  /**
   * Volatility CapMethod
   */
  public enum VolatilityCapMethodEnum {
    NOCAP("noCap"),
    
    SPECIFIEDRATE("specifiedRate"),
    
    MULTIPLIER("multiplier");

    private String value;

    VolatilityCapMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VolatilityCapMethodEnum fromValue(String value) {
      for (VolatilityCapMethodEnum b : VolatilityCapMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VOLATILITY_CAP_METHOD = "volatilityCapMethod";
  private VolatilityCapMethodEnum volatilityCapMethod;

  public static final String JSON_PROPERTY_VOLATILITY_CAP_METHOD_VALUE = "volatilityCapMethodValue";
  private Double volatilityCapMethodValue;

  public static final String JSON_PROPERTY_EQUITY_EXCHANGE_RATE = "equityExchangeRate";
  private Double equityExchangeRate;


  public FIConvertibleSettings equityPrice(Double equityPrice) {
    this.equityPrice = equityPrice;
    return this;
  }

   /**
   * Equity Price
   * @return equityPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Equity Price")
  @JsonProperty(JSON_PROPERTY_EQUITY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getEquityPrice() {
    return equityPrice;
  }


  public void setEquityPrice(Double equityPrice) {
    this.equityPrice = equityPrice;
  }


  public FIConvertibleSettings equityIndexVolatility(Double equityIndexVolatility) {
    this.equityIndexVolatility = equityIndexVolatility;
    return this;
  }

   /**
   * Equity Index Volatility
   * @return equityIndexVolatility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Equity Index Volatility")
  @JsonProperty(JSON_PROPERTY_EQUITY_INDEX_VOLATILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getEquityIndexVolatility() {
    return equityIndexVolatility;
  }


  public void setEquityIndexVolatility(Double equityIndexVolatility) {
    this.equityIndexVolatility = equityIndexVolatility;
  }


  public FIConvertibleSettings equityDividendYield(Double equityDividendYield) {
    this.equityDividendYield = equityDividendYield;
    return this;
  }

   /**
   * Equity Dividend Yield
   * @return equityDividendYield
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Equity Dividend Yield")
  @JsonProperty(JSON_PROPERTY_EQUITY_DIVIDEND_YIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getEquityDividendYield() {
    return equityDividendYield;
  }


  public void setEquityDividendYield(Double equityDividendYield) {
    this.equityDividendYield = equityDividendYield;
  }


  public FIConvertibleSettings volatilityCapMethod(VolatilityCapMethodEnum volatilityCapMethod) {
    this.volatilityCapMethod = volatilityCapMethod;
    return this;
  }

   /**
   * Volatility CapMethod
   * @return volatilityCapMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Volatility CapMethod")
  @JsonProperty(JSON_PROPERTY_VOLATILITY_CAP_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VolatilityCapMethodEnum getVolatilityCapMethod() {
    return volatilityCapMethod;
  }


  public void setVolatilityCapMethod(VolatilityCapMethodEnum volatilityCapMethod) {
    this.volatilityCapMethod = volatilityCapMethod;
  }


  public FIConvertibleSettings volatilityCapMethodValue(Double volatilityCapMethodValue) {
    this.volatilityCapMethodValue = volatilityCapMethodValue;
    return this;
  }

   /**
   * Volatility CapMethod Value - (Required only when  volatilityCapMethod is specifiedRate or multiplier)
   * @return volatilityCapMethodValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Volatility CapMethod Value - (Required only when  volatilityCapMethod is specifiedRate or multiplier)")
  @JsonProperty(JSON_PROPERTY_VOLATILITY_CAP_METHOD_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getVolatilityCapMethodValue() {
    return volatilityCapMethodValue;
  }


  public void setVolatilityCapMethodValue(Double volatilityCapMethodValue) {
    this.volatilityCapMethodValue = volatilityCapMethodValue;
  }


  public FIConvertibleSettings equityExchangeRate(Double equityExchangeRate) {
    this.equityExchangeRate = equityExchangeRate;
    return this;
  }

   /**
   * Equity Exchange Rate
   * @return equityExchangeRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Equity Exchange Rate")
  @JsonProperty(JSON_PROPERTY_EQUITY_EXCHANGE_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getEquityExchangeRate() {
    return equityExchangeRate;
  }


  public void setEquityExchangeRate(Double equityExchangeRate) {
    this.equityExchangeRate = equityExchangeRate;
  }


  /**
   * Return true if this FIConvertibleSettings object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FIConvertibleSettings fiConvertibleSettings = (FIConvertibleSettings) o;
    return Objects.equals(this.equityPrice, fiConvertibleSettings.equityPrice) &&
        Objects.equals(this.equityIndexVolatility, fiConvertibleSettings.equityIndexVolatility) &&
        Objects.equals(this.equityDividendYield, fiConvertibleSettings.equityDividendYield) &&
        Objects.equals(this.volatilityCapMethod, fiConvertibleSettings.volatilityCapMethod) &&
        Objects.equals(this.volatilityCapMethodValue, fiConvertibleSettings.volatilityCapMethodValue) &&
        Objects.equals(this.equityExchangeRate, fiConvertibleSettings.equityExchangeRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(equityPrice, equityIndexVolatility, equityDividendYield, volatilityCapMethod, volatilityCapMethodValue, equityExchangeRate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FIConvertibleSettings {\n");
    sb.append("    equityPrice: ").append(toIndentedString(equityPrice)).append("\n");
    sb.append("    equityIndexVolatility: ").append(toIndentedString(equityIndexVolatility)).append("\n");
    sb.append("    equityDividendYield: ").append(toIndentedString(equityDividendYield)).append("\n");
    sb.append("    volatilityCapMethod: ").append(toIndentedString(volatilityCapMethod)).append("\n");
    sb.append("    volatilityCapMethodValue: ").append(toIndentedString(volatilityCapMethodValue)).append("\n");
    sb.append("    equityExchangeRate: ").append(toIndentedString(equityExchangeRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

