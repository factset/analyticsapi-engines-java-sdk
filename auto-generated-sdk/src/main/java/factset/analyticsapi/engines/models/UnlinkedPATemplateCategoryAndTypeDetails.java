/*
 * Engines API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: v3:[pa,vault,pub,quant,fi,axp,afi,npo,bpm,fpo,security-modeling,others],v1:[fiab]
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import factset.analyticsapi.engines.models.UnlinkedPATemplateColumnDetails;
import factset.analyticsapi.engines.models.UnlinkedPATemplateGroupDetails;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import factset.analyticsapi.engines.JSON;


/**
 * UnlinkedPATemplateCategoryAndTypeDetails
 */
@JsonPropertyOrder({
  UnlinkedPATemplateCategoryAndTypeDetails.JSON_PROPERTY_ID,
  UnlinkedPATemplateCategoryAndTypeDetails.JSON_PROPERTY_COLUMNS,
  UnlinkedPATemplateCategoryAndTypeDetails.JSON_PROPERTY_GROUPS,
  UnlinkedPATemplateCategoryAndTypeDetails.JSON_PROPERTY_SNAPSHOT,
  UnlinkedPATemplateCategoryAndTypeDetails.JSON_PROPERTY_CATEGORY,
  UnlinkedPATemplateCategoryAndTypeDetails.JSON_PROPERTY_NAME
})
@javax.annotation.Generated(value = "CustomJavaClientCodegen")
public class UnlinkedPATemplateCategoryAndTypeDetails implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_COLUMNS = "columns";
  private java.util.List<UnlinkedPATemplateColumnDetails> columns = null;

  public static final String JSON_PROPERTY_GROUPS = "groups";
  private java.util.List<UnlinkedPATemplateGroupDetails> groups = null;

  public static final String JSON_PROPERTY_SNAPSHOT = "snapshot";
  private Boolean snapshot;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;


  public UnlinkedPATemplateCategoryAndTypeDetails id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Type Id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type Id")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public UnlinkedPATemplateCategoryAndTypeDetails columns(java.util.List<UnlinkedPATemplateColumnDetails> columns) {
    this.columns = columns;
    return this;
  }

  public UnlinkedPATemplateCategoryAndTypeDetails addColumnsItem(UnlinkedPATemplateColumnDetails columnsItem) {
    if (this.columns == null) {
      this.columns = new java.util.ArrayList<UnlinkedPATemplateColumnDetails>();
    }
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * List of default columns
   * @return columns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of default columns")
  @JsonProperty(JSON_PROPERTY_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<UnlinkedPATemplateColumnDetails> getColumns() {
    return columns;
  }


  public void setColumns(java.util.List<UnlinkedPATemplateColumnDetails> columns) {
    this.columns = columns;
  }


  public UnlinkedPATemplateCategoryAndTypeDetails groups(java.util.List<UnlinkedPATemplateGroupDetails> groups) {
    this.groups = groups;
    return this;
  }

  public UnlinkedPATemplateCategoryAndTypeDetails addGroupsItem(UnlinkedPATemplateGroupDetails groupsItem) {
    if (this.groups == null) {
      this.groups = new java.util.ArrayList<UnlinkedPATemplateGroupDetails>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * List of default groupings
   * @return groups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of default groupings")
  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<UnlinkedPATemplateGroupDetails> getGroups() {
    return groups;
  }


  public void setGroups(java.util.List<UnlinkedPATemplateGroupDetails> groups) {
    this.groups = groups;
  }


  public UnlinkedPATemplateCategoryAndTypeDetails snapshot(Boolean snapshot) {
    this.snapshot = snapshot;
    return this;
  }

   /**
   * Snapshot
   * @return snapshot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Snapshot")
  @JsonProperty(JSON_PROPERTY_SNAPSHOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSnapshot() {
    return snapshot;
  }


  public void setSnapshot(Boolean snapshot) {
    this.snapshot = snapshot;
  }


  public UnlinkedPATemplateCategoryAndTypeDetails category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Unlinked template category
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unlinked template category")
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public UnlinkedPATemplateCategoryAndTypeDetails name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Unlinked template type
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unlinked template type")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  /**
   * Return true if this UnlinkedPATemplateCategoryAndTypeDetails object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UnlinkedPATemplateCategoryAndTypeDetails unlinkedPATemplateCategoryAndTypeDetails = (UnlinkedPATemplateCategoryAndTypeDetails) o;
    return Objects.equals(this.id, unlinkedPATemplateCategoryAndTypeDetails.id) &&
        Objects.equals(this.columns, unlinkedPATemplateCategoryAndTypeDetails.columns) &&
        Objects.equals(this.groups, unlinkedPATemplateCategoryAndTypeDetails.groups) &&
        Objects.equals(this.snapshot, unlinkedPATemplateCategoryAndTypeDetails.snapshot) &&
        Objects.equals(this.category, unlinkedPATemplateCategoryAndTypeDetails.category) &&
        Objects.equals(this.name, unlinkedPATemplateCategoryAndTypeDetails.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, columns, groups, snapshot, category, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UnlinkedPATemplateCategoryAndTypeDetails {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    snapshot: ").append(toIndentedString(snapshot)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

