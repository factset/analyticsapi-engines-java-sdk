/*
 * Engines API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: v3:[pa,spar,vault,pub,quant,fi,axp,afi,npo,bpm,fpo,others],v1:[fiab]
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package factset.analyticsapi.engines.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import factset.analyticsapi.engines.models.PACommentaryDate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import factset.analyticsapi.engines.JSON;


/**
 * Metadata
 */
@JsonPropertyOrder({
  Metadata.JSON_PROPERTY_TILE_NAME,
  Metadata.JSON_PROPERTY_PORTFOLIO_DESCRIPTION,
  Metadata.JSON_PROPERTY_BENCHMARK_DESCRIPTION,
  Metadata.JSON_PROPERTY_START_DATE,
  Metadata.JSON_PROPERTY_END_DATE,
  Metadata.JSON_PROPERTY_FREQUENCY
})
@javax.annotation.Generated(value = "CustomJavaClientCodegen")
public class Metadata implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TILE_NAME = "tileName";
  private String tileName;

  public static final String JSON_PROPERTY_PORTFOLIO_DESCRIPTION = "portfolioDescription";
  private String portfolioDescription;

  public static final String JSON_PROPERTY_BENCHMARK_DESCRIPTION = "benchmarkDescription";
  private String benchmarkDescription;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private PACommentaryDate startDate;

  public static final String JSON_PROPERTY_END_DATE = "endDate";
  private PACommentaryDate endDate;

  public static final String JSON_PROPERTY_FREQUENCY = "frequency";
  private String frequency;


  public Metadata tileName(String tileName) {
    this.tileName = tileName;
    return this;
  }

   /**
   * PA Tile name associated with the component
   * @return tileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PA Tile name associated with the component")
  @JsonProperty(JSON_PROPERTY_TILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTileName() {
    return tileName;
  }


  public void setTileName(String tileName) {
    this.tileName = tileName;
  }


  public Metadata portfolioDescription(String portfolioDescription) {
    this.portfolioDescription = portfolioDescription;
    return this;
  }

   /**
   * Portfolio name used in generating commentary
   * @return portfolioDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Portfolio name used in generating commentary")
  @JsonProperty(JSON_PROPERTY_PORTFOLIO_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPortfolioDescription() {
    return portfolioDescription;
  }


  public void setPortfolioDescription(String portfolioDescription) {
    this.portfolioDescription = portfolioDescription;
  }


  public Metadata benchmarkDescription(String benchmarkDescription) {
    this.benchmarkDescription = benchmarkDescription;
    return this;
  }

   /**
   * Benchmark name used in generating commentary
   * @return benchmarkDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Benchmark name used in generating commentary")
  @JsonProperty(JSON_PROPERTY_BENCHMARK_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBenchmarkDescription() {
    return benchmarkDescription;
  }


  public void setBenchmarkDescription(String benchmarkDescription) {
    this.benchmarkDescription = benchmarkDescription;
  }


  public Metadata startDate(PACommentaryDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PACommentaryDate getStartDate() {
    return startDate;
  }


  public void setStartDate(PACommentaryDate startDate) {
    this.startDate = startDate;
  }


  public Metadata endDate(PACommentaryDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PACommentaryDate getEndDate() {
    return endDate;
  }


  public void setEndDate(PACommentaryDate endDate) {
    this.endDate = endDate;
  }


  public Metadata frequency(String frequency) {
    this.frequency = frequency;
    return this;
  }

   /**
   * Date frequency
   * @return frequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date frequency")
  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFrequency() {
    return frequency;
  }


  public void setFrequency(String frequency) {
    this.frequency = frequency;
  }


  /**
   * Return true if this Metadata object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Metadata metadata = (Metadata) o;
    return Objects.equals(this.tileName, metadata.tileName) &&
        Objects.equals(this.portfolioDescription, metadata.portfolioDescription) &&
        Objects.equals(this.benchmarkDescription, metadata.benchmarkDescription) &&
        Objects.equals(this.startDate, metadata.startDate) &&
        Objects.equals(this.endDate, metadata.endDate) &&
        Objects.equals(this.frequency, metadata.frequency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tileName, portfolioDescription, benchmarkDescription, startDate, endDate, frequency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Metadata {\n");
    sb.append("    tileName: ").append(toIndentedString(tileName)).append("\n");
    sb.append("    portfolioDescription: ").append(toIndentedString(portfolioDescription)).append("\n");
    sb.append("    benchmarkDescription: ").append(toIndentedString(benchmarkDescription)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

